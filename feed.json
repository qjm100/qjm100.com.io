{
    "version": "https://jsonfeed.org/version/1",
    "title": "优雅",
    "subtitle": "暴力出奇迹，骗分过样例。",
    "icon": "https://elegant-axe.top/assets/favicon.ico",
    "description": "模拟只会猜题意，贪心只能过样例。",
    "home_page_url": "https://elegant-axe.top",
    "items": [
        {
            "id": "https://elegant-axe.top/2024/10/26/face-recognition/",
            "url": "https://elegant-axe.top/2024/10/26/face-recognition/",
            "title": "face_recognition 在windows下安装与使用",
            "date_published": "2024-10-26T12:18:05.000Z",
            "content_html": "<h1 id=\"face_recognition-在windows下安装与使用\"><a class=\"anchor\" href=\"#face_recognition-在windows下安装与使用\">#</a> face_recognition 在 windows 下安装与使用</h1>\n<blockquote>\n<p>face_recognition 是一个强大、简单、易上手的人脸识别开源项目，并且配备了完整的开发文档和应用案例，特别是兼容 <code>树莓派</code> 系统。</p>\n</blockquote>\n<p>最近想用树莓派做一个监控摄像头的项目，准备现在 windows 上把程序先做好再部署到 linux 上，但是官方并不推荐在 windows 上使用。以下是我的踩坑之旅</p>\n<h2 id=\"本地环境\"><a class=\"anchor\" href=\"#本地环境\">#</a> 本地环境</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>OS: Windows <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>IDE: pycharm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>python: <span class=\"token number\">3.12</span></pre></td></tr></table></figure><h2 id=\"安装dlib\"><a class=\"anchor\" href=\"#安装dlib\">#</a> 安装 dlib</h2>\n<p>第一步时就出现了巨大折磨</p>\n<pre class=\"info\"><code>CMake is not installed on your system!\n  \n      Or it is possible some broken copy of cmake is installed on your system.\n      It is unfortunately very common for python package managers to include\n      broken copies of cmake.  So if the error above this refers to some file\n      path to a cmake file inside a python or anaconda or miniconda path then you\n      should delete that broken copy of cmake from your computer.\n  \n      Instead, please get an official copy of cmake from one of these known good\n      sources of an official cmake:\n          - cmake.org (this is how windows users should get cmake)\n          - apt install cmake (for Ubuntu or Debian based systems)\n          - yum install cmake (for Redhat or CenOS based systems)\n  \n      On a linux machine you can run &#96;which cmake&#96; to see what cmake you are\n      actually using.  If it tells you it&#39;s some cmake from any kind of python\n      packager delete it and install an official cmake.\n  \n      More generally, cmake is not installed if when you open a terminal window\n      and type\n         cmake --version\n      you get an error.  So you can use that as a very basic test to see if you\n      have cmake installed.  That is, if cmake --version doesn&#39;t run from the\n      same terminal window from which you are reading this error message, then\n      you have not installed cmake.  Windows users should take note that they\n      need to tell the cmake installer to add cmake to their PATH.  Since you\n      can&#39;t run commands that are not in your PATH.  This is how the PATH works\n      on Linux as well, but failing to add cmake to the PATH is a particularly\n      common problem on windows and rarely a problem on Linux.</code></pre><p>对于这个问题，只是少了一个 cmake 库，好搞</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> cmake</pre></td></tr></table></figure><p>但是安装之后还是有问题</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671cdfd2d29ded1a8c45d805.png\" alt=\"\" /></p>\n<p>应该是没有 visualStudio 的编译器</p>\n<p>于是我去<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\"> visual studio</a> 的官网上安装了以下两个组件</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671ce138d29ded1a8c46f410.png\" alt=\"\" /></p>\n<p>再装下 dlib 库试试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> dlib</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671ce2e0d29ded1a8c484bbc.png\" alt=\"\" /></p>\n<p>就这么水灵灵的撞上了。</p>\n<h2 id=\"安装face_recognition\"><a class=\"anchor\" href=\"#安装face_recognition\">#</a> 安装 face_recognition</h2>\n<p>剩下的就要简单很多了，直接运行 <code>pip</code>  指令试一试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> face_recognition</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671ce3afd29ded1a8c496387.png\" alt=\"安装成功\" /></p>\n<p><strong> <code>完美,安装成功了</code> </strong></p>\n<h2 id=\"but\"><a class=\"anchor\" href=\"#but\">#</a> BUT</h2>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671ce738d29ded1a8c4c3032.png\" alt=\"\" /></p>\n<p>又又又又又出现了问题，缺少 face_recognition_models</p>\n<p>按照提示试一下</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> git+https://github.com/ageitgey/face_recognition_models</pre></td></tr></table></figure><p>尝试运行时又出现错误</p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671ce92fd29ded1a8c4e2125.png\" alt=\"\" /></p>\n<p>这是因为缺少 setuptools 库</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> setuptools</pre></td></tr></table></figure><p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671cea9cd29ded1a8c4f4dc6.png\" alt=\"\" /></p>\n<p>ok, 完美！终于装好这个库了</p>\n<h2 id=\"写个demo试一下\"><a class=\"anchor\" href=\"#写个demo试一下\">#</a> 写个 demo 试一下</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"><span>n</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> face_recognition</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>image <span class=\"token operator\">=</span> face_recognition<span class=\"token punctuation\">.</span>load_image_file<span class=\"token punctuation\">(</span><span class=\"token string\">\"./img.png\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>face_locations <span class=\"token operator\">=</span> face_recognition<span class=\"token punctuation\">.</span>face_locations<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I found &#123;&#125; face(s) in this photograph.\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>face_locations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> face_location <span class=\"token keyword\">in</span> face_locations<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> left <span class=\"token operator\">=</span> face_location</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A face is located at pixel location Top: &#123;&#125;, Left: &#123;&#125;, Bottom: &#123;&#125;, Right: &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>top<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    face_image <span class=\"token operator\">=</span> image<span class=\"token punctuation\">[</span>top<span class=\"token punctuation\">:</span>bottom<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span>right<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    pil_image <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>fromarray<span class=\"token punctuation\">(</span>face_image<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    pil_image<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"用了一张网上的ai人像\"><a class=\"anchor\" href=\"#用了一张网上的ai人像\">#</a> 用了一张网上的 ai 人像</h3>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671cf5a2d29ded1a8c586c58.png\" alt=\"\" /></p>\n<h3 id=\"识别效果\"><a class=\"anchor\" href=\"#识别效果\">#</a> 识别效果</h3>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671cf5e3d29ded1a8c58b164.png\" alt=\"\" /></p>\n<p>看起来不错 <span class=\"spoiler\" title=\"你知道得太多了\">识别了两张人脸，大失败啊</span></p>\n<h2 id=\"el-psy-congroo\"><a class=\"anchor\" href=\"#el-psy-congroo\">#</a> El psy congroo</h2>\n",
            "tags": [
                "face_recognition",
                "AI",
                "python",
                "人脸识别"
            ]
        },
        {
            "id": "https://elegant-axe.top/2024/10/26/jinzhuandasai/",
            "url": "https://elegant-axe.top/2024/10/26/jinzhuandasai/",
            "title": "金砖零代码比赛",
            "date_published": "2024-10-25T16:00:05.000Z",
            "content_html": "<h1 id=\"零代码hap简单的编程思路\"><a class=\"anchor\" href=\"#零代码hap简单的编程思路\">#</a> 零代码（HAP）—— 简单的编程思路</h1>\n<blockquote>\n<p>最开始参加的时候不太理解整个界面，以为很复杂，实际上就是在问做出一个有着题目要求的软件所需要的思路</p>\n</blockquote>\n<hr />\n<h2 id=\"学习网站地址\"><a class=\"anchor\" href=\"#学习网站地址\">#</a> 学习网站地址</h2>\n<p><a href=\"http://ws-nocode.com:81/student/#/login\"><em><strong>万算零代码平台</strong></em></a></p>\n<p><img loading=\"lazy\" data-src=\"https://pic.imgdb.cn/item/671bd2b2d29ded1a8c6b6758.png\" alt=\"\" /></p>\n<hr />\n<h2 id=\"haphyper-application-platform\"><a class=\"anchor\" href=\"#haphyper-application-platform\">#</a> HAP（Hyper Application Platform）</h2>\n<p>帮助用户零代码构建企业应用，用户不需要代码开发就能够搭建出用户体验上佳的销售、运营、人事、采购等核心业务应用，打通企业内部数据。</p>\n<p>拥有的功能如下</p>\n<ol>\n<li><strong> <code>工作表</code> </strong></li>\n<li>视图</li>\n<li><strong> <code>角色和权限</code> </strong></li>\n<li><strong> <code>工作流</code> </strong></li>\n<li>统计图表</li>\n<li>自定义页面</li>\n<li>外部门户</li>\n</ol>\n<h2 id=\"1-创建应用的方法\"><a class=\"anchor\" href=\"#1-创建应用的方法\">#</a> 1. 创建应用的方法</h2>\n<p><img loading=\"lazy\" data-src=\"https://help.mingdao.com/assets/images/LET20221031190742-1d1486d76648e8b7a5fc330d32e77140.png\" alt=\"\" /></p>\n<p>实际上就是一个<em><strong>模拟数据库的流程</strong>，只需导入数据，知道每个数据的</em><em>类型</em> *，无需操作数据，做好每个元素之间的关系就好了</p>\n<h2 id=\"工作表\"><a class=\"anchor\" href=\"#工作表\">#</a> 工作表</h2>\n<p><img loading=\"lazy\" data-src=\"https://help.mingdao.com/assets/images/let20231128171302-38fd7420af85a30d02ffab757f40d9eb.png\" alt=\"\" /></p>\n<h3 id=\"创建步骤要点\"><a class=\"anchor\" href=\"#创建步骤要点\">#</a> 创建步骤要点</h3>\n<ol>\n<li>选择并配置触发方式</li>\n<li>设置流程中需要执行的功能节点</li>\n<li>设置流程执行过程中的配置</li>\n<li>保存并发布流程</li>\n<li>启用流程并测试</li>\n</ol>\n<h3 id=\"触发方式\"><a class=\"anchor\" href=\"#触发方式\">#</a> 触发方式</h3>\n<ul>\n<li>\n<p>通过工作表触发</p>\n<p>当工作表中创建了记录或更改记录数据、删除记录时触即可发流程。<br />\n例如：《费用报销》表中有新的记录产生，就触发流程，通知领导进行审批操作。</p>\n</li>\n<li>\n<p>定时触发</p>\n<p>可以设定一个循环周期时间，每当时间到达一个周期时间，都可以执行一次计划动作。<br />\n例如：每个工作日的晚上 6 点， 给同事发送通知提醒：【下班时间到了，别忘了写日报哦】</p>\n</li>\n<li>\n<p>按日期字段触发</p>\n<p>选择工作表中的一个日期字段组成日期时间表，每当到表中的其中 1 个时间，就触发流程执行操作。例如：《员工档案》表中的员工生日（日期字段），每到 1 个员工的生日当天，就给这个员工发送祝福短信。</p>\n</li>\n<li>\n<p>组织人员事件触发</p>\n<p>当组织内有人加入或离职时触发流程。例如：单独做了一个《员工管理》表，同步管理后台中的人员信息， 当有人员离职时，自动触发流程，在《员工管理》表中将其标记为 “已离职”。</p>\n</li>\n<li>\n<p>外部用户事件触发</p>\n<p>当应用下的外部用户注册、登录、注销、被停用时触发工作流。例如：当外部用户注销时，向其发送一封告别邮件。</p>\n</li>\n<li>\n<p>Webhook 触发</p>\n<p>工作表支持被动接收数据，您其他系统有数据变更后，可以将变更的数据内容推送到平台服务器，服务器接收到推送消息后可以触发工作流，然后自动执行计划的操作（新增一行记录，发送一个通知消息等），从而打通和其他系统的数据对接，提高业务效率。</p>\n</li>\n</ul>\n<h3 id=\"添加-配置流程中需要执行的功能节点\"><a class=\"anchor\" href=\"#添加-配置流程中需要执行的功能节点\">#</a> 添加、配置流程中需要执行的功能节点</h3>\n<p><img loading=\"lazy\" data-src=\"https://help.mingdao.com/assets/images/SCR-20240829-uduj-b4de9f5236e05e507448e52b572dc78b.png\" alt=\"\" /><br />\n<a href=\"https://help.mingdao.com/workflow/nodes\">详细介绍，共 40 种</a></p>\n<p>可以简单来说就是<strong>流程图</strong></p>\n<h2 id=\"组织角色\"><a class=\"anchor\" href=\"#组织角色\">#</a> 组织角色</h2>\n<p>组织角色在金砖中也是十分重要的一个部分，当遇到需要管理部门时</p>\n<h3 id=\"1-创建角色和角色组\"><a class=\"anchor\" href=\"#1-创建角色和角色组\">#</a> 1. 创建角色和角色组</h3>\n<p><img loading=\"lazy\" data-src=\"https://help.mingdao.com/assets/images/wyb20220802095456-4eafd8b64f121126a33f0edfaaaf6b7e.png\" alt=\"\" /></p>\n<p>组织管理员点击系统头像依次进入 &quot;组织管理&quot;&gt;&quot;用户&quot;&gt;&quot;角色&quot;，在页面中点击创建角色，并设置角色名称、所属角色组、及角色的备注。也可以通过导入批量添加角色。</p>\n<p><strong>角色组</strong><br />\n<img loading=\"lazy\" data-src=\"https://help.mingdao.com/assets/images/let20240326nqie-449140f277d82fe847f3140f32e05319.png\" alt=\"\" /></p>\n<h2 id=\"比赛tip\"><a class=\"anchor\" href=\"#比赛tip\">#</a> 比赛 tip</h2>\n<h3 id=\"这个东西做不出来完整的应用只用做流程就行数据导入这些都是手动导入交的时候就是交一个框架就行-记住导入20-30条数据就行\"><a class=\"anchor\" href=\"#这个东西做不出来完整的应用只用做流程就行数据导入这些都是手动导入交的时候就是交一个框架就行-记住导入20-30条数据就行\">#</a> 这个东西做不出来完整的应用，只用做流程就行，数据导入这些都是手动导入，交的时候就是交一个框架就行。记住导入 20-30 条数据就行。</h3>\n<h3 id=\"参考官方的文档对比赛需要的功能进行记录\"><a class=\"anchor\" href=\"#参考官方的文档对比赛需要的功能进行记录\">#</a> 参考<a href=\"https://help.mingdao.com/\">官方的文档</a>，对比赛需要的功能进行记录</h3>\n",
            "tags": [
                "比赛",
                "金砖",
                "零代码"
            ]
        }
    ]
}